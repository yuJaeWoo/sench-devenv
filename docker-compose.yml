version: "3"
services: 
  frontend:
    build:
      dockerfile: Dockerfile
      context: ./frontend
    #코드 수정후 다시이미지 build없이 코드가 반영 될 수 있게 volume을 사용한다.
    volumes:
      - /app/node_modules
      - ./frontend:/app
    stdin_open: true


  backend:
    build: 
      dockerfile: Dockerfile
      context: ./backend
    container_name: app_backend
    volumes:  
      - /app/node_modules
      - ./backend:/app
    environment:
       MYSQL_HOST: senchfull.chpamjt0t9vb.ap-northeast-2.rds.amazonaws.com
       MYSQL_USER: pp8960
       MYSQL_ROOT_PASSWORD: senchdev
       MYSQL_DATABASE: sench
       MYSQL_PORT: 3306
  

  # mysql:
  #   build: ./mysql
  #   restart: unless-stopped
  #   container_name: app_mysql
  #   ports:
  #     - "3307:3307"
  #   volumes:
  #     - ./mysql/mysql_data:/var/lib/mysql
  #     - ./mysql/sqls/:/docker-entrypoint-initdb.d/
  #   environment:
  #     MYSQL_USER: root
  #     MYSQL_ROOT_PASSWORD: root
  #     MYSQL_DATABASE: myapp
  #     MYSQL_TCP_PORT: 3307
  #mysql의 root 비밀번호와 db를 설정해준다.
    

      